package view;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import logicaBD.DBClient;
import model.Client;
import client.ClientConnection;
import model.MD5;

public final class FrmClient extends javax.swing.JInternalFrame {

    public FrmClient() throws Exception {
        initComponents();
        this.setSize(1056, 545);
        load();
        loadClient();
    }

    MD5 md5 = new MD5();
    DefaultTableModel model = new DefaultTableModel();
    //DBClient dBClient = new DBClient();

    void load() {
        txtIdClient.setVisible(false);
        txtUser.setEditable(false);
        txtPassword.setEditable(false);
    }

    public void loadClient() throws Exception {
        ClientConnection socket = new ClientConnection("127.0.0.1", 9000);
        System.out.println("Conexion ..");
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("Género");
        model.addColumn("Tipo de Documento");
        model.addColumn("N° Documento");
        model.addColumn("E-mail");
        model.addColumn("Login");
        model.addColumn("Password");

        ArrayList<Object[]> data = new ArrayList<>();
        try {
            socket.createConnectionMsg();
            System.out.println("Conexion establecinda");
            data = socket.fillClient();

            for (int i = 0; i < data.size(); i++) {

                model.addRow(data.get(i));

            }
            tblClient.setModel(model);
            ocultarColumnas();
            socket.closeConnection();
        } catch (Exception ex) {
            Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void ocultarColumnas() {
        tblClient.getColumnModel().getColumn(0).setMaxWidth(0);
        tblClient.getColumnModel().getColumn(0).setMinWidth(0);
        tblClient.getColumnModel().getColumn(0).setPreferredWidth(0);
        tblClient.getColumnModel().getColumn(7).setMaxWidth(0);
        tblClient.getColumnModel().getColumn(7).setMinWidth(0);
        tblClient.getColumnModel().getColumn(7).setPreferredWidth(0);
        tblClient.getColumnModel().getColumn(8).setMaxWidth(0);
        tblClient.getColumnModel().getColumn(8).setMinWidth(0);
        tblClient.getColumnModel().getColumn(8).setPreferredWidth(0);
    }

    public void mayuscula(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        String cadena = ("" + c).toUpperCase();
        c = cadena.charAt(0);
        evt.setKeyChar(c);

    }

    void clear() {
        txtIdClient.setText("");
        txtName.setText("");
        txtLastName.setText("");
        cbxGender.setSelectedItem("Masculino");
        cbxDocumentType.setSelectedItem("Cédula de Ciudadanía");
        txtDocumentNumber.setText("");
        txtEmail.setText("");
        txtUser.setText("");
        txtPassword.setText("");

    }

    void showClient(int numFila) {
        txtIdClient.setText(String.valueOf(model.getValueAt(numFila, 0)));
        txtName.setText(String.valueOf(model.getValueAt(numFila, 1)));
        txtLastName.setText(String.valueOf(model.getValueAt(numFila, 2)));
        cbxGender.setSelectedItem(String.valueOf(model.getValueAt(numFila, 3)));
        cbxDocumentType.setSelectedItem(String.valueOf(model.getValueAt(numFila, 4)));
        txtDocumentNumber.setText(String.valueOf(model.getValueAt(numFila, 5)));
        txtEmail.setText(String.valueOf(model.getValueAt(numFila, 6)));
        txtUser.setText(String.valueOf(model.getValueAt(numFila, 7)));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClient = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtDocumentNumber = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        cbxDocumentType = new javax.swing.JComboBox<String>();
        cbxGender = new javax.swing.JComboBox<String>();
        jLabel11 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtIdClient = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Cliente");
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));
        jPanel2.setLayout(null);

        tblClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClient);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 92, 560, 380);

        btnDelete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/eliminar.png"))); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete);
        btnDelete.setBounds(470, 40, 110, 30);

        txtSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        jPanel2.add(txtSearch);
        txtSearch.setBounds(80, 40, 380, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Buscar:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(20, 50, 60, 17);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(440, 10, 590, 490);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro"));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Nombre:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 50, 60, 17);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Contraseña:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 400, 80, 17);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Apellido:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 100, 70, 17);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Tipo de Documento:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 200, 150, 17);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Número de Documento:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 250, 170, 17);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Correo Electrónico:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 300, 130, 17);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Usuario:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 350, 60, 17);

        txtPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txtPassword);
        txtPassword.setBounds(190, 390, 230, 30);

        txtName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtName);
        txtName.setBounds(190, 40, 230, 30);

        txtLastName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtLastName);
        txtLastName.setBounds(190, 90, 230, 30);

        txtDocumentNumber.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDocumentNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocumentNumberActionPerformed(evt);
            }
        });
        txtDocumentNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDocumentNumberKeyTyped(evt);
            }
        });
        jPanel1.add(txtDocumentNumber);
        txtDocumentNumber.setBounds(190, 240, 230, 30);

        txtEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        jPanel1.add(txtEmail);
        txtEmail.setBounds(190, 290, 230, 30);

        txtUser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txtUser);
        txtUser.setBounds(190, 340, 230, 30);

        cbxDocumentType.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxDocumentType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cédula de Ciudadanía", "Pasaporte", "Tarjeta de Identidad" }));
        cbxDocumentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDocumentTypeActionPerformed(evt);
            }
        });
        jPanel1.add(cbxDocumentType);
        cbxDocumentType.setBounds(190, 190, 230, 30);

        cbxGender.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));
        cbxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxGenderActionPerformed(evt);
            }
        });
        jPanel1.add(cbxGender);
        cbxGender.setBounds(190, 140, 230, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Género:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(10, 150, 150, 17);

        btnClear.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/nuevo.GIF"))); // NOI18N
        btnClear.setText("Limpiar");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear);
        btnClear.setBounds(10, 440, 100, 30);

        btnSave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/guardar.png"))); // NOI18N
        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);
        btnSave.setBounds(160, 440, 105, 30);

        btnUpdate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/actualizar.png"))); // NOI18N
        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate);
        btnUpdate.setBounds(290, 440, 120, 30);
        jPanel1.add(txtIdClient);
        txtIdClient.setBounds(370, 0, 50, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 430, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Client client = new Client();
        ClientConnection socket = new ClientConnection("127.0.0.1", 9000);

        client.setName(txtName.getText());
        client.setLastName(txtLastName.getText());
        int select = cbxGender.getSelectedIndex();
        client.setGender((String.valueOf(cbxGender.getItemAt(select))));
        int sel = cbxDocumentType.getSelectedIndex();
        client.setDocumentType((String.valueOf(cbxDocumentType.getItemAt(sel))));
        client.setDocumentNumber(txtDocumentNumber.getText());
        client.setEmail(txtEmail.getText());

        client.setLogin(txtUser.getText());
        client.setPassword(md5.MD5(txtPassword.getText()));

        try {

            socket.createConnectionMsg();
            boolean ans = socket.createClient(client);
            if (ans == true) {
                JOptionPane.showMessageDialog(rootPane, "Registro Exitoso");

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se ha Podido Registrar");
            }
            socket.closeConnection();

        } catch (Exception ex) {
            Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

        } catch (Exception ex) {
            Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            //loadClient();
        } catch (Exception ex) {
            Logger.getLogger(FrmClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            loadClient();
        } catch (Exception ex) {
            Logger.getLogger(FrmClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        txtLastName.requestFocus();
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        cbxGender.requestFocus();
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtDocumentNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocumentNumberActionPerformed
        txtUser.setText(txtDocumentNumber.getText());
        txtPassword.setText(txtDocumentNumber.getText());
        txtEmail.requestFocus();
    }//GEN-LAST:event_txtDocumentNumberActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed

    }//GEN-LAST:event_txtEmailActionPerformed

    private void cbxDocumentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDocumentTypeActionPerformed
        txtDocumentNumber.requestFocus();
    }//GEN-LAST:event_cbxDocumentTypeActionPerformed

    private void cbxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxGenderActionPerformed
        cbxDocumentType.requestFocus();
    }//GEN-LAST:event_cbxGenderActionPerformed

    private void txtDocumentNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocumentNumberKeyTyped
        txtUser.setText(txtDocumentNumber.getText());
        txtPassword.setText(txtDocumentNumber.getText());
    }//GEN-LAST:event_txtDocumentNumberKeyTyped

    private void tblClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientMouseClicked
        int numFila = tblClient.getSelectedRow();
        showClient(numFila);
    }//GEN-LAST:event_tblClientMouseClicked

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        if (txtSearch.getText().length() == 0) {
            try {
                loadClient();
            } catch (Exception ex) {
                Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            ClientConnection socket = new ClientConnection("127.0.0.1", 9000);
            System.out.println("Conexion ..");
            model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            };
            model.addColumn("ID");
            model.addColumn("Nombre");
            model.addColumn("Apellido");
            model.addColumn("Género");
            model.addColumn("Tipo de Documento");
            model.addColumn("N° Documento");
            model.addColumn("E-mail");
            model.addColumn("Login");
            model.addColumn("Password");

            ArrayList<Object[]> data = new ArrayList<>();
            try {
                socket.createConnectionMsg();
                System.out.println("Conexion establecinda");
                data = socket.fillClientSearch(txtSearch.getText());

                for (int i = 0; i < data.size(); i++) {

                    model.addRow(data.get(i));

                }
                tblClient.setModel(model);
                ocultarColumnas();
                socket.closeConnection();
            } catch (Exception ex) {
                Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (txtIdClient.getText().length() == 0) {
            JOptionPane.showConfirmDialog(rootPane, "Seleccione el Empleado a Eliminar");
            tblClient.requestFocus();
            return;
        }
        int confirmacion = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de Eliminar este Cliente?", "Confirmar", 2);
        if (confirmacion == 0) {
            ClientConnection socket = new ClientConnection("127.0.0.1", 9000);
            Client client = new Client();
            int idPerson = Integer.parseInt(txtIdClient.getText());
            client.setIdPerson(idPerson);

            try {
                socket.createConnectionMsg();
                System.out.println("Conexion establecinda");
                boolean data = socket.deleteClient(String.valueOf(idPerson));
                if (data == true) {
                    JOptionPane.showMessageDialog(rootPane, "Eliminado");

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Imposible Eliminar");
                }
                socket.closeConnection();
            } catch (Exception ex) {
                Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        clear();
        try {
            loadClient();
        } catch (Exception ex) {
            Logger.getLogger(FrmClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Client client = new Client();
        ClientConnection socket = new ClientConnection("127.0.0.1", 9000);

        client.setName(txtName.getText());
        client.setLastName(txtLastName.getText());
        int select = cbxGender.getSelectedIndex();
        client.setGender((String.valueOf(cbxGender.getItemAt(select))));
        int sel = cbxDocumentType.getSelectedIndex();
        client.setDocumentType((String.valueOf(cbxDocumentType.getItemAt(sel))));
        client.setDocumentNumber(txtDocumentNumber.getText());
        client.setEmail(txtEmail.getText());

        client.setLogin(txtUser.getText());
        client.setPassword(md5.MD5(txtPassword.getText()));

        try {

            socket.createConnectionMsg();
            boolean ans = socket.updateClient(client);
            if (ans == true) {
                JOptionPane.showMessageDialog(rootPane, "Registro Exitoso");

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se ha Podido Registrar");
            }
            socket.closeConnection();

        } catch (Exception ex) {
            Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

        } catch (Exception ex) {
            Logger.getLogger(FrmEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            //loadClient();
        } catch (Exception ex) {
            Logger.getLogger(FrmClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            loadClient();
        } catch (Exception ex) {
            Logger.getLogger(FrmClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        clear();
        try {
            loadClient();
        } catch (Exception ex) {
            Logger.getLogger(FrmClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbxDocumentType;
    private javax.swing.JComboBox<String> cbxGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClient;
    private javax.swing.JTextField txtDocumentNumber;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIdClient;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
